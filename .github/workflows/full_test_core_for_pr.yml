name: Full Core Tests (maintainer only)

on:
  workflow_dispatch:
    inputs:
      pr:
        description: "PR number"
        required: true
      ref_kind:
        description: "Which ref to test (merge|head)"
        required: false
        default: "merge"

permissions:
  contents: read

concurrency:
  group: full-tests-pr-${{ github.event.inputs.pr }}-${{ github.event.inputs.ref_kind }}
  cancel-in-progress: true

jobs:
  full-tests:
    if: ${{ github.repository_owner == 'confident-ai' }}
    runs-on: ubuntu-latest
    timeout-minutes: 60
    environment: ci-secrets
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      DEEPEVAL_TELEMETRY_OPT_OUT: 1
      DEEPEVAL_DEBUG_ASYNC: 1
      LOG_LEVEL: "info"
      DEEPEVAL_PER_TASK_TIMEOUT_SECONDS_OVERRIDE: 60
      PYTHONFAULTHANDLER: "1"
      PYTHONASYNCIODEBUG: "1"
      PYTHONUNBUFFERED: "1"
      PYTEST_ADDOPTS: >-
        -vv -rA --maxfail=1 --capture=tee-sys
        --durations=25
        -o log_cli=true -o log_cli_level=INFO
        --log-cli-format="%(asctime)s %(levelname)s [%(name)s] %(message)s"

    steps:
      - name: Resolve ref
        id: refsel
        run: |
          if [ "${{ github.event.inputs.ref_kind }}" = "head" ]; then
            echo "ref=refs/pull/${{ github.event.inputs.pr }}/head" >> $GITHUB_OUTPUT
          else
            # test what would merge
            echo "ref=refs/pull/${{ github.event.inputs.pr }}/merge" >> $GITHUB_OUTPUT
          fi

      - name: Checkout PR ref
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.refsel.outputs.ref }}
          fetch-depth: 0

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Cache virtualenv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      # Core deps only (main)
      - name: Install dependencies (main)
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root --only main

      - name: Install project (main)
        run: poetry install --no-interaction --only main

      #----------------------------------------------
      #              run test suite
      #----------------------------------------------

      # Run Core tests
      - name: Run core tests
        if: ${{ env.OPENAI_API_KEY != '' }}
        run: |
          poetry run pytest \
            tests/test_core/ \
            --ignore=tests/test_core/test_synthesizer/ \
            --ignore=tests/test_core/test_datasets/

      # Install dev dependencies and run dev tests
      - name: Install dev dependencies
        run: poetry install --no-interaction --with dev

      - name: Run dev tests (with secrets)
        if: ${{ env.OPENAI_API_KEY != '' }}
        run: |
          poetry run pytest \
            tests/test_core/test_synthesizer/ tests/test_core/test_datasets/

